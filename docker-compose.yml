services:
  # приложение Next.js
  web:
    # сборка на основе Dockerfile
    build: .
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
    # приложение зависит от БД
    depends_on:
      - db
    # внутренняя сеть для коммуникации сервисов
    networks:
      - my_network

  # БД
  db:
    image: postgres:latest
    env_file: .env
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  # задача cron
  cron:
    image: alpine/curl
    # https://crontab.guru/
    command: >
      sh -c "
        echo '*/10 * * * * curl -X POST http://web:3000/db/clear' > /etc/crontabs/root && \
        crond -f -l 2
      "
    # cron зависит от приложения
    depends_on:
      - web
    networks:
      - my_network

# тома
volumes:
  postgres_data:

# сети
networks:
  my_network:
    driver: bridge
